<XGBoost_Implementation_Prompt>
  <Context>
    Implement XGBoost model training pipeline for financial time series prediction with proper validation and hyperparameter optimization.
  </Context>

  <ModelRequirements>
    <PredictionTarget>1-day forward returns for trading decisions</PredictionTarget>
    <ValidationMethod>Time series cross-validation (no look-ahead bias)</ValidationMethod>
    <PerformanceTarget>&gt;55% directional accuracy on out-of-sample data</PerformanceTarget>
    <TrainingData>200+ historical trades minimum for initial training</TrainingData>
  </ModelRequirements>

  <Implementation>
    <Component name="model_trainer">
      <Feature>Proper time series train/validation splits</Feature>
      <Feature>Early stopping to prevent overfitting</Feature>
      <Feature>Feature importance tracking</Feature>
      <Feature>Model evaluation with financial metrics</Feature>
    </Component>

    <Component name="hyperparameter_optimization">
      <Feature>Optuna-based Bayesian optimization</Feature>
      <Feature>Cross-validation within optimization</Feature>
      <Feature>Pruning of poor trials</Feature>
      <Feature>Parameter importance analysis</Feature>
    </Component>

    <Component name="model_validation">
      <Feature>Walk-forward validation</Feature>
      <Feature>Prediction confidence estimation</Feature>
      <Feature>Regime-stratified performance analysis</Feature>
      <Feature>Feature stability monitoring</Feature>
    </Component>
  </Implementation>

  <Deliverables>
    <Item>XGBoostTrainer class with proper time series validation</Item>
    <Item>Hyperparameter optimization using Optuna</Item>
    <Item>Financial performance evaluation metrics</Item>
    <Item>Model persistence integration with S3</Item>
  </Deliverables>

  <SuccessCriteria>
    Trained XGBoost model achieves target accuracy and can be saved/loaded for predictions
  </SuccessCriteria>
</XGBoost_Implementation_Prompt>
