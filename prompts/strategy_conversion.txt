<StrategyConversionPlan>
  <ExistingBacktestStrategies>
    <Strategy name="ma_bt.py" production_name="MomentumStrategy">
      <Logic>SMA crossover (10 > 20 = buy, 10 < 20 = sell)</Logic>
      <Category>MOMENTUM</Category>
      <ExtractFrom>MA_backtester.backtest_ma_strategy()</ExtractFrom>
    </Strategy>

    <Strategy name="rsi_bt.py" production_name="MeanReversionStrategy">
      <Logic>RSI overbought/oversold (RSI ≤ 30 = buy, RSI ≥ 70 = sell)</Logic>
      <Category>MEAN_REVERSION</Category>
      <ExtractFrom>rsi_backtest.backtest_rsi_strategy()</ExtractFrom>
    </Strategy>

    <Strategy name="bolinger_bt.py" production_name="BollingerStrategy">
      <Logic>Bollinger band touches (price at lower = buy, price at upper = sell)</Logic>
      <Category>MEAN_REVERSION</Category>
      <ExtractFrom>bb_backtest.backtest_bollinger_strategy()</ExtractFrom>
    </Strategy>

    <Strategy name="kalman_bt.py" production_name="VolatilityStrategy">
      <Logic>Kalman filter mean reversion (Z-score based entries)</Logic>
      <Category>VOLATILITY</Category>
      <ExtractFrom>KalmanMeanReversionBacktest.backtest_kalman_strategy()</ExtractFrom>
    </Strategy>

    <Strategy name="conPair_bt.py" production_name="PairsStrategy">
      <Logic>Cointegration pairs trading (spread Z-score based)</Logic>
      <Category>PAIRS</Category>
      <ExtractFrom>CointegrationPairsBacktest.backtest_pairs_strategy()</ExtractFrom>
    </Strategy>
  </ExistingBacktestStrategies>

  <ConversionProcess>
    <Step>Extract core signal generation logic from backtest classes</Step>
    <Step>Remove backtesting-specific code (portfolio tracking, performance metrics)</Step>
    <Step>Standardize to BaseStrategy interface</Step>
    <Step>Add confidence scoring based on signal strength</Step>
    <Step>Include strategy metadata for orchestrator</Step>
  </ConversionProcess>

  <StrategyInterface>
    <Method name="generate_signal">
      <Input>df (OHLCV data with technical indicators)</Input>
      <Input>sentiment (float -1.0 to +1.0)</Input>
      <Input>confidence_threshold (float 0-100)</Input>
      <Output>StrategySignal(action, confidence, reasoning)</Output>
    </Method>

    <Method name="get_signal_confidence">
      <Input>df (current market data)</Input>
      <Output>confidence score 0-100</Output>
    </Method>

    <Method name="get_strategy_metadata">
      <Output>metadata about strategy characteristics</Output>
    </Method>
  </StrategyInterface>

  <SignalGeneration>
    <MomentumStrategy>
      <Logic>
        <Step>Use StockDataTools to add SMA_10 and SMA_20</Step>
        <Step>Check SMA crossover condition</Step>
        <Step>Calculate confidence based on SMA separation</Step>
        <Step>Apply sentiment filter (only buy if sentiment > -0.3)</Step>
      </Logic>
    </MomentumStrategy>

    <MeanReversionStrategy>
      <Logic>
        <Step>Use StockDataTools to add RSI</Step>
        <Step>Check RSI overbought/oversold levels</Step>
        <Step>Calculate confidence based on RSI extreme level</Step>
        <Step>Apply sentiment filter for mean reversion timing</Step>
      </Logic>
    </MeanReversionStrategy>

    <BollingerStrategy>
      <Logic>
        <Step>Use StockDataTools to add Bollinger Bands</Step>
        <Step>Check price position relative to bands</Step>
        <Step>Calculate confidence based on band penetration depth</Step>
        <Step>Apply sentiment for band breakout vs reversion</Step>
      </Logic>
    </BollingerStrategy>

    <VolatilityStrategy>
      <Logic>
        <Step>Calculate Kalman filter fair value and Z-score</Step>
        <Step>Check Z-score thresholds for mean reversion entry</Step>
        <Step>Calculate confidence based on Z-score magnitude and filter confidence</Step>
        <Step>Apply sentiment as position sizing modifier</Step>
      </Logic>
    </VolatilityStrategy>

    <PairsStrategy>
      <Logic>
        <Step>Calculate spread and Z-score between symbol pairs</Step>
        <Step>Check Z-score thresholds for pairs entry</Step>
        <Step>Calculate confidence based on cointegration strength</Step>
        <Step>Apply sentiment as pairs selection filter</Step>
      </Logic>
    </PairsStrategy>
  </SignalGeneration>

  <ConfidenceScoring>
    <MomentumStrategy>
      <Formula>confidence = min(100, abs(sma_10 - sma_20) / sma_20 * 1000)</Formula>
      <Logic>Higher SMA separation = higher confidence</Logic>
    </MomentumStrategy>

    <MeanReversionStrategy>
      <Formula>confidence = min(100, abs(50 - rsi) * 2)</Formula>
      <Logic>More extreme RSI = higher confidence</Logic>
    </MeanReversionStrategy>

    <BollingerStrategy>
      <Formula>confidence = min(100, abs(bb_position - 0.5) * 200)</Formula>
      <Logic>Closer to band edges = higher confidence</Logic>
    </BollingerStrategy>

    <VolatilityStrategy>
      <Formula>confidence = min(100, abs(zscore) * 30)</Formula>
      <Logic>Higher Z-score deviation = higher confidence</Logic>
    </VolatilityStrategy>

    <PairsStrategy>
      <Formula>confidence = min(100, abs(spread_zscore) * 25)</Formula>
      <Logic>Higher spread deviation = higher confidence</Logic>
    </PairsStrategy>
  </ConfidenceScoring>

  <SentimentIntegration>
    <MomentumStrategy>
      <Rule>Only generate BUY signals if sentiment > -0.3</Rule>
      <Rule>Only generate SELL signals if sentiment < 0.3</Rule>
      <Reasoning>Momentum works better when aligned with sentiment</Reasoning>
    </MomentumStrategy>

    <MeanReversionStrategy>
      <Rule>Increase confidence by 20% if sentiment opposes price movement</Rule>
      <Rule>Decrease confidence by 20% if sentiment aligns with price movement</Rule>
      <Reasoning>Mean reversion works better against sentiment extremes</Reasoning>
    </MeanReversionStrategy>

    <BollingerStrategy>
      <Rule>Use sentiment to distinguish breakout vs reversion at bands</Rule>
      <Rule>Strong sentiment + band touch = potential breakout</Rule>
      <Reasoning>Sentiment helps predict band behavior</Reasoning>
    </BollingerStrategy>

    <VolatilityStrategy>
      <Rule>Use sentiment as position sizing modifier (not signal filter)</Rule>
      <Rule>Strong negative sentiment = smaller position size</Rule>
      <Reasoning>Volatility strategy is sentiment-agnostic</Reasoning>
    </VolatilityStrategy>

    <PairsStrategy>
      <Rule>Filter pairs based on relative sentiment of both stocks</Rule>
      <Rule>Prefer pairs where sentiment divergence supports spread direction</Rule>
      <Reasoning>Sentiment can drive temporary pairs divergence</Reasoning>
    </PairsStrategy>
  </SentimentIntegration>

  <StrategyMetadata>
    <MomentumStrategy>
      <Name>Moving Average Momentum</Name>
      <Category>MOMENTUM</Category>
      <TypicalHolding>5-15 days</TypicalHolding>
      <WorksBestIn>Trending markets with clear directional movement</WorksBestIn>
      <MinConfidence>65</MinConfidence>
    </MomentumStrategy>

    <MeanReversionStrategy>
      <Name>RSI Mean Reversion</Name>
      <Category>MEAN_REVERSION</Category>
      <TypicalHolding>3-10 days</TypicalHolding>
      <WorksBestIn>Range-bound markets with clear support/resistance</WorksBestIn>
      <MinConfidence>70</MinConfidence>
    </MeanReversionStrategy>

    <BollingerStrategy>
      <Name>Bollinger Band Reversion</Name>
      <Category>MEAN_REVERSION</Category>
      <TypicalHolding>3-12 days</TypicalHolding>
      <WorksBestIn>Markets with consistent volatility patterns</WorksBestIn>
      <MinConfidence>65</MinConfidence>
    </BollingerStrategy>

    <VolatilityStrategy>
      <Name>Kalman Filter Volatility</Name>
      <Category>VOLATILITY</Category>
      <TypicalHolding>2-8 days</TypicalHolding>
      <WorksBestIn>High volatility markets with mean reversion tendencies</WorksBestIn>
      <MinConfidence>75</MinConfidence>
    </VolatilityStrategy>

    <PairsStrategy>
      <Name>Cointegration Pairs Trading</Name>
      <Category>PAIRS</Category>
      <TypicalHolding>5-20 days</TypicalHolding>
      <WorksBestIn>Markets with stable correlations between related stocks</WorksBestIn>
      <MinConfidence>70</MinConfidence>
    </PairsStrategy>
  </StrategyMetadata>

  <ImplementationConstraints>
    <Constraint>Use existing StockDataTools methods without modification</Constraint>
    <Constraint>Extract only signal generation logic from backtest classes</Constraint>
    <Constraint>Remove all portfolio management and performance tracking code</Constraint>
    <Constraint>Keep strategies simple and focused on single responsibility</Constraint>
    <Constraint>Ensure all strategies work with same DataFrame input format</Constraint>
    <Constraint>Standardize confidence scoring to 0-100 scale</Constraint>
  </ImplementationConstraints>

  <FileStructure>
    <portfolio_manager>
      <strategies>
        <File>__init__.py</File>
        <File>base_strategy.py</File>           <!-- Abstract base class -->
        <File>momentum_strategy.py</File>       <!-- From ma_bt.py -->
        <File>mean_reversion_strategy.py</File> <!-- From rsi_bt.py -->
        <File>bollinger_strategy.py</File>      <!-- From bolinger_bt.py -->
        <File>volatility_strategy.py</File>     <!-- From kalman_bt.py -->
        <File>pairs_strategy.py</File>          <!-- From conPair_bt.py -->
      </strategies>
    </portfolio_manager>
  </FileStructure>

  <ValidationApproach>
    <Step>Test each strategy individually with sample data</Step>
    <Step>Verify signals match expected logic from backtest versions</Step>
    <Step>Test confidence scoring produces reasonable values</Step>
    <Step>Verify sentiment integration works as expected</Step>
    <Step>Test strategy selector can discover and use all strategies</Step>
  </ValidationApproach>
</StrategyConversionPlan>
